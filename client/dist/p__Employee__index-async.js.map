{"version":3,"sources":["src/pages/Employee/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PageContainer, ProColumns, ProTable } from '@ant-design/pro-components';\nimport { EmployeeType } from '@/@types/employee';\n\nconst EmployeeList: React.FC = () => {\n  const [data, setData] = useState<EmployeeType[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // 获取员工数据\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/employees');\n        const result = await response.json();\n        console.log(result);\n        \n        setData(result.employees);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  // 定义列的配置，只包含指定字段\n  const columns:ProColumns<EmployeeType>[] = [\n    {\n      title: '用户名',\n      dataIndex: 'username',\n      valueType: 'text',\n    },\n    {\n      title: '级别',\n      dataIndex: 'level',\n      valueType: 'text',\n    },\n    {\n      title: '电话',\n      dataIndex: 'phone',\n      valueType: 'text',\n    },\n    {\n      title: '部门',\n      dataIndex: 'partment',\n      valueType: 'text',\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <ProTable<EmployeeType>\n        columns={columns}\n        dataSource={data}\n        loading={loading}\n        rowKey=\"id\"\n        search={false} // 如果不需要搜索框，可以禁用\n        pagination={{\n          pageSize: 10,  // 每页显示条数\n        }}\n        options={{\n          density: true,\n          fullScreen: true,\n          reload: true,\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default EmployeeList;\n"],"names":[],"mappings":";;;;;;;4BAwEA;;;eAAA;;;;;;wEAxE2C;sCACS;;;;;;;;;;AAGpD,MAAM,eAAyB;;IAC7B,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,eAAQ,EAAiB,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,eAAQ,EAAU;IAEhD,SAAS;IACT,IAAA,gBAAS,EAAC;QACR,MAAM,iBAAiB;YACrB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,MAAM,SAAS,MAAM,SAAS,IAAI;gBAClC,QAAQ,GAAG,CAAC;gBAEZ,QAAQ,OAAO,SAAS;YAC1B,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,iBAAiB;IACjB,MAAM,UAAqC;QACzC;YACE,OAAO;YACP,WAAW;YACX,WAAW;QACb;QACA;YACE,OAAO;YACP,WAAW;YACX,WAAW;QACb;QACA;YACE,OAAO;YACP,WAAW;YACX,WAAW;QACb;QACA;YACE,OAAO;YACP,WAAW;YACX,WAAW;QACb;KACD;IAED,qBACE,2BAAC,4BAAa;kBACZ,cAAA,2BAAC,uBAAQ;YACP,SAAS;YACT,YAAY;YACZ,SAAS;YACT,QAAO;YACP,QAAQ;YACR,YAAY;gBACV,UAAU;YACZ;YACA,SAAS;gBACP,SAAS;gBACT,YAAY;gBACZ,QAAQ;YACV;;;;;;;;;;;AAIR;GAlEM;KAAA;IAoEN,WAAe"}